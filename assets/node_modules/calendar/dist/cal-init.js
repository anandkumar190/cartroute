
!function ($) {
    "use strict";

    var CalendarApp = function () {
        this.$body = $("body")
        this.$calendar = $('#calendar'),
        this.$event = ('#calendar-events div.calendar-events'),
        this.$categoryForm = $('#add-new-event form'),
        this.$extEvents = $('#calendar-events'),
        this.$modal = $('#my-event'),
        this.$saveCategoryBtn = $('.save-category'),
        this.$calendarObj = null
    };


    /* on drop */
    CalendarApp.prototype.onDrop = function (eventObj, date) {
        var $this = this;
        // retrieve the dropped element's stored Event Object
        var originalEventObject = eventObj.data('eventObject');
        var $categoryClass = eventObj.attr('data-class');
        // we need to copy it, so that multiple events don't have a reference to the same object
        var copiedEventObject = $.extend({}, originalEventObject);
        // assign it the date that was reported
        copiedEventObject.start = date;
        if ($categoryClass)
            copiedEventObject['className'] = [$categoryClass];
        // render the event on the calendar
        $this.$calendar.fullCalendar('renderEvent', copiedEventObject, true);
        // is the "remove after drop" checkbox checked?
        if ($('#drop-remove').is(':checked')) {
            // if so, remove the element from the "Draggable Events" list
            eventObj.remove();
        }
    },
    /* on click on event */
    CalendarApp.prototype.onEventClick = function (calEvent, jsEvent, view,custid,shift) {
        var curdate = new Date();
        var clickdate = new Date(jsEvent.start);
        
        if (clickdate < curdate) {
            alert("You cannot Update Future update of Previous Date ");
            return;
        }

        var $this = this;
        var arr = calEvent.title.split(":");
        var cqty = arr[1].trim();
        var bqty = arr[3].trim();
        var form = $("<form></form>");
        form.append("<label>Change Order</label>");
        form.append("<div class='input-group'><input class='form-control' type=text value='" +cqty+ "' name='cqty' /></div>");
        form.append("<div class='input-group'><input class='form-control' type=text value='" +bqty+ "' name='bqty' /><span class='input-group-btn'><button type='submit' class='btn btn-success waves-effect waves-light'><i class='fa fa-check'></i> Save</button></span></div>");
        $this.$modal.modal({
            backdrop: 'static'
        });
        $this.$modal.find('.delete-event').show().end().find('.save-event').hide().end().find('.modal-body').empty().prepend(form).end().find('.delete-event').unbind('click').click(function () {
            $this.$calendarObj.fullCalendar('removeEvents', function (ev) {
                return (ev._id == calEvent._id);
            });
            $this.$modal.modal('hide');
        });
        $this.$modal.find('form').on('submit', function () {
            cqty = form.find("input[name='cqty']").val();
            bqty = form.find("input[name='bqty']").val();

            calEvent.title = "Cow: " + cqty + "\n:Buff: " + bqty;     
         
                $("#loader").fadeIn();
                $.ajax({
                    type: "POST",
                    url: "RecheduleForm.aspx/UpdateEvents",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify({ "custid": custid, "shift": shift ,"cqty":cqty,"bqty":bqty,"date":start}),
                    success: function (doc) {
                        $("#loader").fadeOut();
                        if (doc.d == "less") {
                            alert("You cannot add Future Update of Previous Date and Current Date");
                            return;
                        }
                       
                    },
                    error: function (xhr, status, error) {
                        $("#loader").fadeOut();
                        alert(xhr.responseText);
                    }
                });


            $this.$calendarObj.fullCalendar('updateEvent', calEvent);
            $this.$modal.modal('hide');
            return false;
        });
    },
    /* on select */
    CalendarApp.prototype.onSelect = function (title,start, end, allDay,custid,shift) {
        var $this = this;
        var curdate = new Date();
        var clickdate = new Date(start);
        //if (title !== null && title.length != 0) {
        //    alert("Order Already Saved");
        //    return;
        //}
        if (clickdate <= curdate) {
            alert("You cannot Add Future update of Previous Date and Current date");
            return;
        }
        $this.$modal.modal({
            backdrop: 'static'
        });
        var form = $("<form></form>");
        form.append("<div class='row'></div>");
        form.find(".row")
            .append("<div class='col-md-4'><div class='form-group'><label class='control-label'>C Qty</label><input class='form-control' placeholder='Cow Qty' type='text' value='0.0' name='cqty'/></div></div>")
            .append("<div class='col-md-4'><div class='form-group'><label class='control-label'>B Qty</label><input class='form-control' placeholder='Buffalo Qty' type='text' value='0.0' name='bqty'/></div></div>")
            .append("<div class='col-md-4'><div class='form-group'><label class='control-label'>Category</label><select class='form-control' name='category'></select></div></div>")
            .find("select[name='category']")
            .append("<option value='bg-danger'>Danger</option>")
            .append("<option value='bg-success'>Success</option>")
            .append("<option value='bg-purple'>Purple</option>")
            .append("<option value='bg-primary'>Primary</option>")
            .append("<option value='bg-pink'>Pink</option>")
            .append("<option value='bg-info'>Info</option>")
            .append("<option value='bg-warning'>Warning</option></div></div>");
        $this.$modal.find('.delete-event').hide().end().find('.save-event').show().end().find('.modal-body').empty().prepend(form).end().find('.save-event').unbind('click').click(function () {
            form.submit();
        });
        $this.$modal.find('form').on('submit', function () {
            //alert("hello");

            var cqty = form.find("input[name='cqty']").val();
            var bqty = form.find("input[name='bqty']").val();
            var categoryClass = form.find("select[name='category'] option:checked").val();
            var title = "Cow: " + cqty + "\n:Buff: " + bqty;
            if (title !== null && title.length != 0) {
               
                $("#loader").fadeIn();
                $.ajax({
                    type: "POST",
                    url: "RecheduleForm.aspx/AddEvents",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify({ "custid": custid, "shift": shift ,"cqty":cqty,"bqty":bqty,"date":start,"category":categoryClass}),
                    success: function (doc) {
                        $("#loader").fadeOut();
                        if (doc.d == "less") {
                            alert("You cannot add Future Update of Previous Date and Current Date");
                            return;
                        }
                       
                    },
                    error: function (xhr, status, error) {
                        $("#loader").fadeOut();
                        alert(xhr.responseText);
                    }
                });

                $this.$calendarObj.fullCalendar('renderEvent', {
                    title:title,
                    start: start,
                    allDay: false,
                    className: categoryClass
                }, true);
                $this.$modal.modal('hide');
            }
            else {
                alert('You have to give a title to your event');
            }
            return false;

        });
        $this.$calendarObj.fullCalendar('unselect');
    },
    CalendarApp.prototype.enableDrag = function () {
        //init events
        $(this.$event).each(function () {
            // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
            // it doesn't need to have a start or end
            var eventObject = {
                title: $.trim($(this).text()) // use the element's text as the event title
            };
            // store the Event Object in the DOM element so we can get to it later
            $(this).data('eventObject', eventObject);
            // make the event draggable using jQuery UI
            $(this).draggable({
                zIndex: 999,
                revert: true,      // will cause the event to go back to its
                revertDuration: 0  //  original position after the drag
            });
        });
    }
    /* Initializing */



    CalendarApp.prototype.init = function (custid, shift) {

        this.enableDrag();
        /*  Initialize the calendar  */
        alert("Cust id is " + custid + " and shift " + shift);
        var date = new Date();
        var d = date.getDate();
        var m = date.getMonth();
        var y = date.getFullYear();
        var form = '';
        var today = new Date($.now());
        var defaultEvents = [];
        $("#loader").fadeIn();
        $.ajax({
            type: "POST",
            url: "RecheduleForm.aspx/LoadEvents",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({ "custid": custid, "shift": shift }),
            success: function (doc) {
                $("#loader").fadeOut();
                //alert("Success");
                defaultEvents = JSON.parse(doc.d);
            },
            error: function (xhr, status, error) {
                $("#loader").fadeOut();
                alert(xhr.responseText);
            }
        });
        alert(defaultEvents);
        var $this = this;
        $this.$calendarObj = $this.$calendar.fullCalendar({
            slotDuration: '00:15:00', /* If we want to split day time each 15minutes */
            minTime: '08:00:00',
            maxTime: '19:00:00',
            defaultView: 'month',
            handleWindowResize: true,
            events: $.map(defaultEvents, function (item, i) {
                var event = new Object();
                event.title = item.title;
                event.start = new Date(item.start);
                event.className = item.className;
                event: allDay: true;
                return event;
            }),
            header: {
                left: 'prev,next today',
                center: 'title',
                right: 'month'
            },
            
            editable: true,
            droppable: true, // this allows things to be dropped onto the calendar !!!
            eventLimit: true, // allow "more" link when too many events
            selectable: true,
            drop: function (date) { $this.onDrop($(this), date); },
            select: function (title,start, end, allDay) { $this.onSelect(title,start, end, allDay,custid,shift); },
            eventClick: function (calEvent, jsEvent, view) { $this.onEventClick(calEvent, jsEvent, view,custid,shift); }

        });


    },

    //init CalendarApp
    $.CalendarApp = new CalendarApp, $.CalendarApp.Constructor = CalendarApp

}(window.jQuery);

//initializing CalendarApp
//function($) {
//    "use strict";
//    $.CalendarApp.init("dfdf","dfdxf")
//}(window.jQuery);